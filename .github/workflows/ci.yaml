# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: 1235789
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432  
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:


    - uses: actions/checkout@v3
    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate

    - name: run migrations
      run: make migrateup

    

    - name: Test
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: go test -v ./...
